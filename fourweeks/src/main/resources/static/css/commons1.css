@charset "UTF-8";

/*
    전체 스타일
    - 폭 설정 기준을 테두리(border-box)로 지정
    - 전체 글꼴 설정
*/
* {
    box-sizing: border-box;
    font-family: sans-serif;
}

/*
    container는 작은 화면의 외부 영역을 관리하는 도구
    - 폭 조절과 가운데 배치를 할 수 있어야 한다.
    - css에서는 계산식이 모든 브라우저에서 작동하지 않는다
    - 미리 예상 가능한 크기를 준비해두면 편하게 쓸 수 있지 않을까?
*/
.container-400 { width:400px; margin:0 auto; }
.container-590 { width:590px; margin:0 auto; }
.container-794 { width:794px; margin:0 auto; }
.container-1200 { width:1200px; margin:0 auto; }

/*
    row는 container 내부에 배치될 도구들이 위치할 자리에 해당한다
    - 상하 margin만 부여하여 간격을 띄워준다
*/
.row {
    margin: 10px 0px;
}

/*
    row 내부에 위치하는 도구들의 폭을 설정
    - 폭을 row에 맞게 100%로 설정하거나 아니면 자신의 폭을 그대로 사용
    - 아무 표시도 하지 않으면 폭을 있는 그대로 두고 클래스를 부여하면 100%로 변경
*/
.w-100 {
    width:100%;
}
.w-50 {
    width:50%;
}
.w-25 {
    width:25%;
}

/*
    어짜피 정렬은 left, center, right밖에 없다
    - text-align 속성으로 설정
*/
.left {text-align: left;}
.center {text-align: center;}
.right {text-align: right;}

/*
    margin은 간격을 벌리기 위해서 사용한다
    어떨때는 12px, 어떨때는 17px과 같이 부여하면 일관성이 떨어진다
    표준화된 margin 부여가 가능하도록 스타일을 설정
    - mt(margin-top), mb(margin-bottom), ms(margin-start), me(margin-end)
*/
.mt-10 { margin-top: 10px;}
.mt-20 { margin-top: 20px;}
.mt-30 { margin-top: 30px;}
.mt-40 { margin-top: 40px;}
.mt-50 { margin-top: 50px;}

.mb-10 { margin-bottom: 10px;}
.mb-20 { margin-bottom: 20px;}
.mb-30 { margin-bottom: 30px;}
.mb-40 { margin-bottom: 40px;}
.mb-50 { margin-bottom: 50px;}

.ms-10 { margin-left: 10px;}
.ms-20 { margin-left: 20px;}
.ms-30 { margin-left: 30px;}
.ms-40 { margin-left: 40px;}
.ms-50 { margin-left: 50px;}

.me-10 { margin-right: 10px;}
.me-20 { margin-right: 20px;}
.me-30 { margin-right: 30px;}
.me-40 { margin-right: 40px;}
.me-50 { margin-right: 50px;}

/*
    버튼은 3가지 역할이 있다고 보고 디자인한다
    - 긍정버튼 : 현재의 작업을 완성시키는 버튼
    - 중립버튼 : 현재의 작업과 상관없는 다른 작업과 연결된 버튼
    - 부정버튼 : 현재의 작업이 위험함을 알리거나 부정적인 효과를 처리하는 버튼
*/
.btn {
    border: none;
    font-size: 20px;
    padding: 0.75em;/*글자 크기의 0.75배*/
    cursor: pointer;
    /* a 태그를 버튼으로 만들기 위해 추가 */
    display: inline-block;
    text-align: center;
    text-decoration: none;
}
.btn.btn-positive {
    background-color: #0984e3;
    color: white;
}
.btn.btn-positive:hover {
    background-color: #0876cc;
}
.btn.btn-neutral {
    border: 1px solid gray;
    background-color: white;
    color: gray;
}
.btn.btn-neutral:hover {
    border: 1px solid black;
    color: black;
}
.btn.btn-negative {
    background-color: #d63031;
    color: white;
}
.btn.btn-negative:hover {
    background-color: #c42627;
}

/*
    입력창은 버튼과 같이 등장하므로 비율이나 크기등이 같아야 한다
*/
.input {
    font-size: 20px;
    padding: 0.75em;
    outline: none;
    border:1px solid gray;
}
.input:focus {
    border-color: black;
}
/* input이라는 클래스가 있으면서 input-underline 클래스가 있다면 */
.input.input-underline {
    border: none;
    border-bottom: 1px solid gray;
}
.input.input-underline:focus {
    border-color: black;
}

/* 배경이미지가 들어가는 입력창 */
.input.input-icon {
    padding-left: 2.5em;
    /* background-image: url("./image/search-icon.png"); */
    background-size: 1em;
    background-repeat: no-repeat;
    background-position-x: 0.75em;
    background-position-y: center;
}

/*
    textarea는 기본적으로 폭 조절이 가능하여 디자인에 어려움이 많다
    - 높이만 조절되게 하던가
    - 아예 조절이 안되게 하던가
    - resize 속성
*/
textarea.input {
    resize: vertical;
}
textarea.input.fix-size {
    resize: none;
}
 /*
    테이블 디자인
    - 테이블은 기본디자인이 너무 많아서 디자인하기 까다로운 태그 중 하나
*/
.table {
    border-collapse: collapse;
    width: 100%;
    font-size: 16px;
}
/* 
    방법1 : .table 안에 있는 모든 th와 모든 td를 선택(후손선택자) 
   - 내부에 있는 모든 요소를 선택하므로 테이블이 중첩되는 경우 문제가 발생
*/
.table th, 
.table td {
    /* border: 1px solid black; */
}
/*  
    방법2 : .table 부터 시작하는 모든 경로를 제시하여 th와 td를 선택(자식선택자)
    - 원하는 부분만 적용 가능                                 
*/
.table > thead > tr > th,
.table > thead > tr > td,
.table > tbody > tr > th,
.table > tbody > tr > td,
.table > tfoot > tr > th,
.table > tfoot > tr > td {
    padding: 0.5em;
}
/* 확장 스타일 : 테두리가 있는 테이블*/
.table.table-border {
    border: 1px solid gray;
}
.table.table-border > thead > tr > th,
.table.table-border > thead > tr > td,
.table.table-border> tbody > tr > th,
.table.table-border > tbody > tr > td,
.table.table-border > tfoot > tr > th,
.table.table-border > tfoot > tr > td {
    border: 1px solid gray;   
}
/* 확장스타일 : 줄무늬 테이블*/
.table.table-stripe > thead > tr,
.table.table-stripe > tbody > tr:nth-child(2n) {
    background-color : #f3a683;
}
/* 확장스타일 : 마우스에 반응하는 테이블*/
.table.table-hover > thead > tr:hover,
.table.table-hover > tbody > tr:hover,
.table.table-hover > tfoot > tr:hover {
    background-color : #f3a683;
}
/* 확장스타일 : 옆이 트여있는 테이블 */
.table.table-slit {
   border: 3px solid gray;
   border-left: none;
   border-right: none;
}
.table.table.table-slit > thead {
    border-bottom: 2px solid gray;
}
.table.table.table-slit > tfoot {
    border-bottom: 2px solid gray;
}
 /*
    이미지 디자인
*/
.image {
    border: 1px solid transparent;
}
.image.image-hover:hover,
.image.image-frame {
    border-color: red;
}
.image.image-blur {
    /* opacity는 불투명도이며 0부터 1까지 설정 가능하다 */
    opacity: 0.65;
}
.image.image-blur:hover {
    opacity: 1;
}
.image.image-shadow {
    /* 
        box-shadow 속성
        box-shadow 우측위치 하단위치 번짐정도 확장정도 
    */
    /* box-shadow: 5px 5px 0px 0px black; 일반적인 그림자*/
    /* box-shadow: 0px 0px 5px 0px black; 번짐효과로 볼록한 것처럼 표현*/
    /* box-shadow: 0px 0px 5px 20px black; 스프레드 효과 */
    box-shadow: 3px 3px 0px 0px black;
}
.image.image-round {
    border-radius: 10px;
}
.image.image-circle {
    border-radius: 50%;
}
.image.image-leaf {
    border-top-left-radius: 50%;
    border-bottom-right-radius: 50%;
}
/* 
    - ul 혹은 ol을 개조하여 구조를 설계
 */
 ul.pagination {
    list-style: none;
    margin: 0;
    padding: 0;
    font-size: 16px;
    text-align: center;
}
 ul.pagination > li {
    display: inline-block;
    border: 1px solid transparent;
    padding: 0.5em;
    line-height: 1em;  /*글자 표시 높이 설정*/
    min-width: 2em;
    cursor: pointer;
}
 ul.pagination > li.on, 
 ul.pagination > li:hover {
    border-color: red;
    color: red;
}
 ul.pagination > li > a{
    display: block;
    width: 100%;
    color: inherit;
    text-decoration: none;
}
 /* 확장 스타일 : 글자 크기를 다르게 하여 다양한 크기 옵션을 제공 */
 ul.pagination.pagination-big {
    font-size: 1.25em;
}
 ul.pagination.pagination-small {
     font-size: 0.75em;
}
/*
    사용자가 화면을 클릭할 수 없도록 만드는 도구
    - position을 fixed로 설정하여 브라우저를 기준으로 위치를 설정
    - 모든 위치를 0으로 설정하거나 폭 높이를 100%로 설정하여 화면에 가득 채움
    - 약간 어둡게 하여 뒤가 비치도록 구현하는 방법
        (1) opacity를 이용 - 내용물까지 투명해짐
        (2) background color를 rgba로 설정하는 방법 - 내용물에는 영향 없음
*/
.fullscreen {
    position: fixed;
    top:0;
    left:0;
    right:0;
    bottom:0;
    /*
    background-color: black;
    opacity: 0.5;
    */
    background-color: rgba(0, 0, 0, 0.5);
}
.screen-center {
    position: absolute;
        /* 중앙에 배치 */
    top:50%;
    left:50%;
    /*방법1 : 마진을 이용하여 좌측 상단으로 이동(크기를 알아야 함) */
    /*
    margin-left: -200px;
    margin-top: -200px;
    */

    /*방법2 : transform 속성을 이용하여 영역을 비율로 이동(크기 몰라도 됨)*/
    transform: translate(-50%, -50%);
}
/*
드롭다운(drop down) 메뉴 만들기
- HTML 구조는 ul로 구현한다
(1) 1차 메뉴와 2차 메뉴, 모든 메뉴에 대한 선택자가 다르다
- 1차 메뉴 : .dropdown-menu > li
- 2차 메뉴 : .dropdown-menu > li > ul > li
- 3차 메뉴 : .dropdown-menu > li > ul > li > ul > li
- 모든 메뉴 : .dropdown-menu li
- 2차 이상 메뉴 : .dropdown-menu ul > li
(2) 모든 메뉴 태그의 여백과 표시방식을 변경
(3) 1차 메뉴의 표시방식(display)을 inline-block으로 변경
(4) 
- 1차 메뉴가 기준점이 될 수 있도록 position을 설정
- 2차 메뉴 이상의 위치 결정 방식(position)을 absolute로 변경
(5) 1차 메뉴를 제외한 나머지 메뉴를 숨김
(6) li 태그에 마우스가 올라가면(hover) 바로 아래에 있는 ul을 표시
(7) 메뉴 항목(li)에 여백 설정 및 폭 맞춤
(8) 메뉴에 마우스가 올라가면 강조 효과를 부여

(+추가)
(9) 우측에 붙는 메뉴를 구현
(+추가)
(10) 3차메뉴부터는 하단이 아닌 옆에 나오도록 처리
(+추가)
(11) 확장 스타일을 부여하면 메뉴를 상단에 고정하도록 변경
*/

/* (2) */
/* .dropdown-menu, 
.dropdown-menu ul {
margin: 0;
padding: 0;
list-style: none;
}

(3)
.dropdown-menu > li {
display: inline-block;
width:100px;
}

(4)
.dropdown-menu > li{
position: relative;
}
.dropdown-menu ul {
position: absolute;
top:100%;
left:0;
}

(5)
.dropdown-menu ul {
display: none;
}

(6)
.dropdown-menu li:hover > ul {
display: block;
}

(7)
.dropdown-menu {
font-size: 14px;
}
.dropdown-menu li {
padding: 0.5em;
}
.dropdown-menu a {
display: block;
width:100%;
text-decoration: none;
text-align: center;
}
.dropdown-menu a {
    display: block;
    width:100%;
    text-decoration: none;
    text-align: center;
    }
.dropdown-menu ul {
width:100%;
}

(8)
.dropdown-menu {
background-color: white;
}
.dropdown-menu li:hover > a {
color:#6c7aef;
font-weight: bold;
}

(9)
.dropdown-menu {
position: relative;
}
.dropdown-menu > .right-menu {
position: absolute;
right:0;
top:0;
}

(10)
.dropdown-menu li {
position: relative;
}
.dropdown-menu > li > ul ul {
position: absolute;
top:0;
left:100%;
}
.dropdown-menu > li.right-menu > ul ul {
position: absolute;
top:0;
left:auto;
right:100%;
}

(11)
.dropdown-menu.dropdown-menu-fixed {
position: fixed;
top:0;
left:0;
right:0;
} */

/* header */
header {
	width: 100%;
    height: 92px;
    background-color: white;
    display: flex;
   	justify-content: center;
    align-items: center;
}
header > a {
	width: 15%;
}
header > nav {
	width:100%;
	height:100%;
}
.dropdown-nav {
	display:flex;
	width:100%;
	height: 100%;
}
.dropdown-nav,
.dropdown-nav ul {
	margin: 0;
    padding: 0;
    list-style: none;
    color: #6C7AEF;
    font-size:16px;
    text-align: center;
}
.dropdown-nav li {
	padding: 0.5em;
	display: flex;
	justify-content: center;
    align-items: center;	
}
.dropdown-nav > li {
	position: relative;
	width: 120px;
	height: 100%;
}
.dropdown-nav > li.right-menu {
	justify-content: flex-end;
	padding: 0.5em 0;
	width: auto;
	height: 100%;
	min-width: 120px;
}
.dropdown-nav ul {
    position: absolute;
    top:100%;
    left:0;
}
.dropdown-nav ul {
    display: none;
}
.dropdown-nav li:hover > ul {
    display: block;
}
.dropdown-nav a{
    display: block;
    width: 100%;
    text-decoration: none;
    color: #6C7AEF;;
    text-align: center;
}
.dropdown-nav ul {
    width: 100%;
    background-color: white;
    border: 1px solid #A8B0E9;
    padding: 0.5em;
}
.dropdown-nav li:hover > a {
    color: #6C7AEF;
    font-weight: bold;
}

/* 9) */
.dropdown-nav {
    position: relative;
}
.dropdown-nav > .right-menu {
    position: absolute;
    right: 0;
    top: 0;
}

header.header-fixed {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
}

/* headerNo 수직 중앙 정렬용 */
.vcenter{
    display: inline-block;
    position: relative;
    width: 100%;
    height: 92px;
    background-color: #ffffff;
}
.vcenter > div{
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 100%;
    height: auto;
}


/* footer */
footer {
	width: 100%;
    height: 150px;
    background-color: white;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-top: 2px solid #d9d9d9;
}
footer > a {
	width: 15%;
}

.copyright {
	margin: 0;
    padding: 0;
    list-style: none;
    color: #707070;
    font-size:16px;
    text-align: center;
}

/* main-chal-list */
.chal-list-container {
	width: 100%;
    height: auto;
    background-color: white;
    display: flex;
   	justify-content: flex-start;
    align-items: center;
	flex-wrap: wrap;
}

.chal-list {
	display:flex;
	flex-direction: column;
	width:288px;
	height: 100%;
	text-align: left;
}
.chal-list {
	margin: 0 5px 30px 5px;
    padding: 0;
    list-style: none;
    color: #3f3f3f;
    font-size:16px;
    text-align: center;
}
.chal-item {
	margin: 0;
    padding: 0.5em;
	display: flex;
    align-items: center;
    width: 288px;
    list-style: none;
    font-size:16px;
    text-align: center;
}

.home-chal-title:link, .home-chal-title:visited {
    color: #3F3F3F;
}
.chal-list:hover {
    color: #6C7AEF;
    font-weight: bold;
}
.chal-item.thumbnail {	
	padding: 0;
}


/*
float 설정
- float를 설정하면 현재 영역에서 left 혹은 right 방향에 붙는다(cf : 자석)
- (문제점) 
- float와 float가 아닌 요소들을 섞어서 배치할 때 문제가 발생
- float가 float 아닌 영역에 포함되지 않는다
- (해결책)
- float를 제거하는 속성인 clear를 float가 끝나는 시점에 사용한다
- clear 등장 이후부터는 float의 영향을 받지 않는다
- (최종 형태)
- float는 필요하고, 다른 요소랑 어울리긴 힘드니 별도의 영역을 준비
- 해당 영역(.float-container) 종료 시 자동으로 clear 되도록 처리
- 가상 선택자(virtual selector)가 필요하다
*/
.float-container {}
.float-container::after {
    content:"";
    display: block;
    clear:both;
}

.float-left {
    float: left;
    /* margin-left : 5px; */
}
.float-right {
    float: right;
    /* margin-right : 5px; */
}

.custom-size {
    font-size: 30px;
}

.color-primary{ color: #AF7AC5; }
.color-secondary{ color: #e17055; }
.color-success{ color:  #2E86C1; }
.color-warning { color:  #229954; }
.color-danger { color: #d63031; }

/*
    세미프로젝트
*/
.label {
       border: none;
       width: 70px;
       height: 30px;
       font-weight: bold;
       border-radius: 4px;
       font-size: 10px;
       padding : 0.5em;
       margin : 5px;
       background-color: #FBE9DD;
       color: black;
       text-align: center;
   }
   .label-wait{
       font-size : 15px;
       background-color: #FBE9DD;
       color: #F2A574;
   }
   .label-status {
       font-size : 15px;
       background-color: #DDDDDD;
       color: #707070;
   }
   .label-ing {
       font-size : 15px;
       background-color: #E5E6F9;
       color:#6C7AEF;
   }
   .label-category {
   	   font-size : 15px;
       background-color: #D5E9FA;
       color: #0084F3;
   }
   .label-notice{
   	   width: 45px;
   	   font-size : 15px;
       background-color: #E5E6F9;
       color:#6C7AEF;
       border-radius: 16px;

   }
   .label-achieve {
   	   font-size : 15px;
       background-color: #F8E4E7;
       color: #ED7584;
   }

.flex{
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: center;
	align-items: center;
}

.flex > div {
    flex-grow: 1;
}
.flex > div > a {
	display: block;
    width: 100%;
	text-decoration: none;
	color: black;
	text-align: right;
	font-size: 16px;
}

flex > div > a:link, flex > div > a:visited {
    color: black;
}

.p-20 {
	padding: 0 20px 0 0;
}